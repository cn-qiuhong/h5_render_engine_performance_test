var __extends = (this && this.__extends) || (function() {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] }
            instanceof Array && function(d, b) { d.__proto__ = b; }) ||
        function(d, b) {
            for (var p in b)
                if (b.hasOwnProperty(p)) d[p] = b[p];
        };
    return function(d, b) {
        extendStatics(d, b);

        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function() {
    function r(e, n, t) {
        function o(i, f) {
            if (!n[i]) {
                if (!e[i]) { var c = "function" == typeof require && require; if (!f && c) return c(i, !0); if (u) return u(i, !0); var a = new Error("Cannot find module '" + i + "'"); throw a.code = "MODULE_NOT_FOUND", a }
                var p = n[i] = { exports: {} };
                e[i][0].call(p.exports, function(r) { var n = e[i][1][r]; return o(n || r) }, p, p.exports, r, e, n, t)
            }
            return n[i].exports
        }
        for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
        return o
    }
    return r
})()({
    1: [function(require, module, exports) {
        "use strict";
        /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
        Object.defineProperty(exports, "__esModule", { value: true });
        /*
         * 游戏初始化配置;
         */
        var GameConfig = /** @class */ (function() {
            function GameConfig() {}
            GameConfig.init = function() {
                var reg = Laya.ClassUtils.regClass;
            };
            GameConfig.width = 640;
            GameConfig.height = 1136;
            GameConfig.scaleMode = "showall";
            GameConfig.screenMode = "vertical";
            GameConfig.alignV = "top";
            GameConfig.alignH = "left";
            GameConfig.startScene = "MainView.scene";
            GameConfig.sceneRoot = "";
            GameConfig.debug = false;
            GameConfig.stat = false;
            GameConfig.physicsDebug = false;
            GameConfig.exportSceneToJson = false;
            return GameConfig;
        }());
        exports.default = GameConfig;
        GameConfig.init();
    }, {}],
    2: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: true });
        var TEXTURE_COUNT = 100;
        var SPRITE_COUNT = 2000;
        var W_COUNT = 40;
        var H_COUNT = 50;
        var W_WIDTH = 640;
        var H_HEIGHT = 1136;
        var Main = /** @class */ (function() {
            function Main() {
                //根据IDE设置初始化引擎		
                Laya.init(640, 1136, Laya["WebGL"]);
                // Laya.init(640, 1136);
                Laya.Stat.show();
                Laya.stage.scaleMode = 'showall';
                var sprites = [];
                var stage = Laya.stage;
                for (var i = 0; i < SPRITE_COUNT; ++i) {
                    var sprite = new Laya.Sprite();
                    sprite.scale(0.25, 0.25);
                    sprite.loadImage('../ims/' + (i % TEXTURE_COUNT) + '.png');
                    sprite.pivot(128, 128);
                    sprite.x = W_WIDTH / W_COUNT * (i % W_COUNT);
                    sprite.y = H_HEIGHT / H_COUNT * (i / W_COUNT | 0);
                    stage.addChild(sprite);
                    sprites.push(sprite);
                }
                Laya.timer.frameLoop(1, this, function(e) {
                    for (var _i = 0, sprites_1 = sprites; _i < sprites_1.length; _i++) {
                        var sprite = sprites_1[_i];
                        sprite.rotation += 3;
                    }
                });
            };
            return Main;
        }());
        //激活启动类
        new Main();
        //显示FPS
        var fpsCon = document.createElement('div');
        Object['assign'](fpsCon.style, {
            position: 'fixed',
            background: '#000',
            color: '#fff',
            top: 0,
            right: 0
        });
        document.body.appendChild(fpsCon);
        var arrFps = new Float64Array(100);
        var lastTime = Date.now();
        var pos = 0;

        function updateFps() {
            var now = Date.now();
            var delta = now - lastTime;
            var fps = 1000 / delta;
            arrFps[pos++] = fps;
            if (pos >= arrFps.length) {
                pos = 0;
            }
            var f = Math.round(arrFps.reduce(function(prev, next) { return prev + next; }) / arrFps.length);
            fpsCon.innerHTML = 'FPS: ' + (f | 0);
            lastTime = now;
            requestAnimationFrame(updateFps);
        }
        requestAnimationFrame(updateFps);
    }, { "./GameConfig": 1 }]
}, {}, [2])